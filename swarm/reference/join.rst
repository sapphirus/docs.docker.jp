.. -*- coding: utf-8 -*-
.. URL: https://docs.docker.com/swarm/reference/join/
.. SOURCE: https://github.com/docker/swarm/blob/master/docs/reference/join.md
   doc version: 1.11
      https://github.com/docker/swarm/commits/master/docs/reference/join.md
.. check date: 2016/04/29
.. Commits on Mar 4, 2016 4b8ed91226a9a49c2acb7cb6fb07228b3fe10007
.. -------------------------------------------------------------------

.. join — Create a Swarm node

.. _join-create-a-swarm-node:

===================================================
join - Swarm ノードの作成
===================================================

.. Prerequisite: Before using join, establish a discovery backend as described in this discovery topic.

動作条件：Swarm マネージャで ``join`` を使う前に、 :doc:`こちらのディスカバリのドキュメント </swarm/discovery>` に書かれているディスカバリ・バックエンドを構築します。

.. The join command creates a Swarm node whose purpose is to run containers on behalf of the cluster. A typical cluster has multiple Swarm nodes.

``join`` コマンドは Swarm ノードを作成します。Swarm ノードはクラスタ内でコンテナを実行する場所という役割があります。一般的なクラスタは複数の Swarm ノードを持ちます。

.. To create a Swarm node, use the following syntax:

Swarm ノードを作成するには、次の構文を使います。

.. code-block:: bash

   $ docker run swarm join [OPTIONS] <discovery>

.. For example, to create a Swarm node in a high-availability cluster with other managers, enter:

例えば、Swarm ノードを高可用性クラスタ対応マネージャに接続するには、次のように実行します。

.. code-block:: bash

   $ docker run -d swarm join --advertise=172.30.0.69:2375 consul://172.30.0.161:8500

.. Or, for example, to create a Swarm node that uses Transport Layer Security (TLS) to authenticate the Docker Swarm nodes, enter:

あるいは、Swarm ノード作成時、Docker Swarm ノード間で TLS 認証を有効にするには、次のように実行します。

.. code-block:: bash

   $ sudo docker run -d swarm join --addr=node1:2376 token://86222732d62b6868d441d430aee4f055

.. Arguments

引数
==========

.. The join command has only one argument:

``join`` コマンドは引数を１つだけ指定できます。

.. <discovery> — Discovery backend

``<discovery>`` - ディスカバリ・バックエンド
--------------------------------------------------

.. Before you create a Swarm node, create a discovery token or set up a discovery backend for your cluster.

Swarm ノードを作成する前に、 :doc:`ディスカバリ・トークンの作成 <create>` と :doc:`ディスカバリ・バックエンドのセットアップ </swarm/discovery>` が必要です。

.. When you create the Swarm node, use the <discovery> argument to specify one of the following discovery backends:

Swarm ノードの作成時、 ``<discovery>`` 引数を使って以下のバックエンドを指定可能です。

* ``token://<token>``
* ``consul://<ip1>/<path>``
* ``etcd://<ip1>,<ip2>,<ip2>/<path>``
* ``file://<path/to/file>``
* ``zk://<ip1>,<ip2>/<path>``
* ``[nodes://]<iprange>,<iprange>``

.. Where:

それぞれの項目は：

..    <token> is a discovery token generated by Docker Hub’s hosted discovery service. To generate this discovery token, use the create command. > Warning: Docker Hub’s hosted discovery backend is not recommended for production use. It’s intended only for testing/development.

* ``<token>`` はDocker Hub のホステッド・ディスカバリ・サービスによって生成されるトークンです。このトークンを作成するには ``create`` コマンドを使います。

..    ip1, ip2, ip3 are each the IP address and port numbers of a discovery backend node.

* ``ip1`` 、 ``ip2`` 、 ``ip3`` はディスカバリ・バックエンド用ノードの IP アドレスとポート番号を指定します。

..    path (optional) is a path to a key-value store on the discovery backend. When you use a single backend to service multiple clusters, you use paths to maintain separate key-value stores for each cluster.

* ``path`` （オプション）はディスカバリ・バックエンドのキーバリュー・ストアのパスを指定します。複数のクラスタを１つのバックエンドで管理する場合は、各クラスタ毎にキーバリューのペアを記述する必要があります。

..     path/to/file is the path to a file that contains a static list of the Swarm managers and nodes that are members the cluster.

* ``path/to/file`` はSwarm マネージャとクラスタのメンバであるノード情報の一覧と、それぞれの静的な IP アドレスのリストを指定したファイルのパスを指定します。

..    iprange is an IP address or a range of IP addresses followed by a port number.

* ``iprange``  は特定のポート番号を利用する IP アドレスの範囲を指定します。

.. Here are a pair of <discovery> argument examples:

以下は ``<discovery>`` 引数の指定例です：

..    A discovery token: token://0ac50ef75c9739f5bfeeaf00503d4e6e
    A Consul node: consul://172.30.0.165:8500

* ディスカバリ・トークン： ``token://0ac50ef75c9739f5bfeeaf00503d4e6e``
* Consul ノード： ``consul://172.30.0.165:8500``

.. The environment variable for <discovery> is $SWARM_DISCOVERY.

``<discovery>`` は環境変数 ``$SWARM_DISCOVERY`` でも指定可能です。

.. For more information and examples, see the Docker Swarm Discovery topic.

より詳しい情報やサンプルについては、 :doc:`/swarm/discovery` をご覧ください。

.. Options

オプション
==========

.. The join command has the following options:

``join`` コマンドには以下のオプションがあります：

.. --advertise, --addr — Advertise Docker Engine’s IP and port number

``--advertise`` , ``--addr`` - Docker Engine のアドバタイズ用 IP とポート番号
--------------------------------------------------------------------------------

.. Use --advertise <ip>:<port> or --addr <ip>:<port> to advertise the IP address and port number of the Docker Engine. For example, --advertise 172.30.0.161:4000. Other swarm managers MUST be able to reach this swarm manager at this address.

``--advertise <ip>:<ポート>`` か ``--addr <ip>:<ポート>`` を使い Docker Engine のアドバタイズ（Advertise; 周知用） IP アドレスとポート番号を指定します。例： ``--advertise 172.30.0.161:4000``  。他の Swarm マネージャは、対象の Swarm マネージャに接続するため、ここで指定した IP アドレスとポート番号を使う必要があります。

.. The environment variable for --advertise is $SWARM_ADVERTISE.

``--advertise`` は環境変数 ``$SWARM_ADVERTISE`` でも指定できます。

.. --heartbeat — Period between each heartbeat

``--heartbeat`` - ハートビート間隔
----------------------------------------

.. Use --heartbeat "<interval>s" to specify the interval, in seconds, between heartbeats the manager sends to the primary manager. These heartbeats indicate that the manager is healthy and reachable. By default, the interval is 60 seconds.

``--heartbeat "<間隔>s"`` を使い、マネージャとプライマリ・マネージャ間のハードビート間隔を秒単位で指定します。ハードビートとはマネージャが正常で到達可能であるかを確認します。デフォルトでは、この間隔は 60 秒です。

.. --ttl — Sets the expiration of an ephemeral node

``--ttl`` - エフェメラル・ノードの期限を設定
--------------------------------------------------

.. Use --ttl "<interval>s" to specify the time-to-live (TTL) interval, in seconds, of an ephemeral node. The default interval is 180s.

``--ttl "<間隔>s"`` を使い、エフェメラル・ノードに対する TTL (time-to-live) 間隔を秒数で指定します。デフォルトの間隔は ``180s`` です。

.. --delay — Add a random delay in [0s,delay] to avoid synchronized registration

``--delay`` - 一斉登録しないようランダム遅延を [0s,delay] で指定
----------------------------------------------------------------------

.. Use --delay "<interval>s" to specify the maximum interval for a random delay, in seconds, before the node registers with the discovery backend. If you deploy a large number of nodes simultaneously, the random delay spreads registrations out over the interval and avoids saturating the discovery backend.

``--delay "間隔<s>"`` の形式で、ディスカバリバックエンドがノードを登録するまで、ランダムに遅延させる最大秒数を指定します。多数のノードをデプロイする時、ランダムに登録間隔の遅延を発生することで、ディスカバリ・バックエンドが飽和しないように（応答不能にならないように）します。

.. --discovery-opt — Discovery options

``--discovery-opt`` - ディスカバリ・オプション
--------------------------------------------------

.. Use --discovery-opt <value> to discovery options, such as paths to the TLS files; the CA’s public key certificate, the certificate, and the private key of the distributed K/V store on a Consul or etcd discovery backend. You can enter multiple discovery options. For example:

``--discovery-opt <値>`` を使いディスカバリオプションを指定します。これには Consul や etcd ディスカバリ・サービスが使用する TLS ファイル（CA 公開鍵証明書、証明書、プライベート鍵）の指定も含みます。ディスカバリ・オプションは何度も指定できます。例：

.. code-block:: bash

   --discovery-opt kv.cacertfile=/path/to/mycacert.pem \
   --discovery-opt kv.certfile=/path/to/mycert.pem \
   --discovery-opt kv.keyfile=/path/to/mykey.pem \

.. For more information, see Use TLS with distributed key/value discovery

より詳しい情報は :doc:`/swarm/discovery` をご覧ください。

.. seealso:: 

   join — Create a Swarm node
      https://docs.docker.com/swarm/reference/join/

